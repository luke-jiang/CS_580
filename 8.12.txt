Q8.12:
Although we typically speak of “the” shortest path between two nodes, single graph
could contain several minimum-length paths with the same endpoints.
Even for weighted graphs, it is often desirable to choose a minimum-weight path with the fewest edges;
call this a best path from s to t. Suppose we are given a directed graph G with positive
edge weights and a source vertex s in G. Describe and analyze an algorithm to compute best
paths in G from s to every other vertex.

A:
call an edge (u, v) tight if dist(u) + W(u, v) = dist(v)
remove all non-tight edges from G.
best(v) := distance from s to v in the best path from s to v.
best(s) = 0
best(v) = forall (u, v), min (best(u) + 1)

track the best edge from s to t by select the neighbor with lowest best number.
