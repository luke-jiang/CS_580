
BFS(G, s):
  label s.dist = 0
  Q = {s}
  while Q is not empty:
    u = Q.dequeue()
    foreach edge(u, v):
      if v is not labelled:
        v.dist = u.dist + 1
        Q.enqueue(v)
  return .dist labels
[O(m)]

Dijkstra(G, s):
  H = new heap
  H.insert(s, 0)
  forall v != s:
    H.insert(v, INF)
  while H is not empty:
    (v, p) = H.removeMin()
    v.dist = p
    foreach edge (v, w):
      if w unlabelled / in heap:
        H.decrease(w, v.dist + W(u, w))
  return .dist labels
[O(m + nlogn)]
