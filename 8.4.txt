Q8.4:
For any edge e in any graph G, let G \ e denote the graph obtained by
deleting e from G. Suppose we are given a graph G and two vertices s
and t. The replacement paths problem asks us to compute the shortest-path
distance from s to t in G \ e, for every edge e of G. The output is an array
of E distances, one for each edge of G.

(a)
Suppose G is a directed graph, and the shortest path from vertex s
to vertex t passes through every vertex of G. Describe an algorithm to solve
this special case of the replacement paths problem in O(E log V ) time.

(b)
Describe an algorithm to solve the replacement paths problem for
arbitrary undirected graphs in O(E log V ) time.


A:
(a)
run Dijkstra's algorithm to find the shortest path E, but with the following
modification:
  instead of keeping one pred label, keep two pred labels (pred1 and pred2),
  where pred2 points to the predecessor of second shortest path from s.
  consider all vertices in the reverse oder in path E.
    if the vertex doesn't have pred2, then the result is INF.
    else, suppose the pred2 label is v'. all vertices in path(v', v)
    has result v'.dist + W(v', v)

(b)
